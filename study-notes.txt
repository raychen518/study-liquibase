++++++++++
Contents
++++++++++
Overview
Features
Concepts
Quick Start Steps
Building Changelogs
References

========================================
Xxxxx Xxxxx Xxxxx
========================================
++++++++++
Contents
++++++++++
============================================================
Xxxxx Xxxxx Xxxxx
============================================================
--------------------------------------------------------------------------------

========================================
Overview
========================================
Liquibase is an open-source database-independent library for tracking, managing and applying database schema changes.

========================================
Features
========================================
- Can create/upgrade databases (per specified changelog files).
- Can generate changelog files (per specified databases).
- Can generate database change documentation.
- Can generate database diffs.
- Can generate SQL scripts.
- Can run through the build, in the application process or on demand.
- Support multiple database types.
- Support multiple developers.
- Support multiple code formats (XML, JSON, SQL and YAML).
- Support contexts.
- Support code branching and merging.
- Support cluster-safe database upgrades.
- Support use without live database connections.
- Support rollbacks of database changes.
- Support custom processes (extensions and plugins).

========================================
Concepts
========================================
Changelog File
Change Set
Change
Precondition
Context

Changelog File
    A changelog file is a text file containing database changes.

    Changelog files can be arbitrarily nested for better management.

    The corresponding configuration setting of changelog files is the <databaseChangeLog> tag.

Change Set
    A change set is the unit to be tracked for the execution.

    Change sets are uniquely identified by the following values.
    - Location of the hosting changelog file (the path of the hosting changelog file).
    - Author of current change set (the value of the "author" attribute of current change set).
    - ID of current change set (the value of the "id" attribute of current change set).

    When Liquibase runs, it queries the DATABASECHANGELOG table for the change sets that are marked as executed and then executes all change sets in the changelog files that have not been marked as executed.

    The corresponding configuration setting of change sets is the <changeSet> tag.

Change
    A change is some change/refactoring to apply to the database.
    Generally, one change set should contain only one change, to avoid failed auto-commit statements that can leave the database in an unexpected state.

    There are 2 types of changes, as follows.
    - Descriptive changes (these changes generate SQL statements accordingly for different types of databases)
    - SQL statements

    There are many corresponding setting targets of changes, such as the <createTable>, <addPrimaryKey>, <insert>, <modifyDataType> and <dropView> tags.

Precondition
    A precondition is a condition which will be tested before an execution and its failure stops that execution.

    Preconditions can be applied to either changelogs or change sets.

    The corresponding configuration setting of preconditions is the <preConditions> tag.

Context
    A context is a mark on change sets which indicates the environments allowing the change sets to run in.

    If no context is specified, the change set will run in all environments.

    The corresponding configuration setting of contexts is the "context" attribute.

========================================
Quick Start Steps
========================================
Here are the steps to create a simple table in a Oracle database using Liquibase, for a quick start.

1. Download and Install Liquibase
   Liquibase can be downloaded from its official website.
   To install Liquibase, unzip the downloaded Liquibase ZIP file to a local directory (e.g. D:\liquibase-3.5.1-bin).

2. Create a Liquibase Changelog File
   Here is an example.
   D:\liquibase\changelogs\changelog-for-quick-start.xml
   ---------------------------------------------------------------------------------------------------------------------
   <?xml version="1.0" encoding="UTF-8"?>
   <databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
       <!-- Create the Table A -->
       <changeSet author="ray.chen" id="1">
           <preConditions onFail="MARK_RAN">
               <not>
                   <tableExists tableName="TABLE_A" />
               </not>
           </preConditions>
           <createTable tableName="TABLE_A">
               <column name="COLUMN_1" type="CHAR(5)">
                   <constraints nullable="false" />
               </column>
               <column name="COLUMN_2" type="VARCHAR2(255)" />
               <column name="COLUMN_3" type="NUMBER(3)" />
           </createTable>
       </changeSet>

       <!-- Add the Primary Key for the Table A -->
       <changeSet author="ray.chen" id="2">
           <preConditions onFail="MARK_RAN">
               <not>
                   <primaryKeyExists tableName="TABLE_A" />
               </not>
           </preConditions>
           <addPrimaryKey constraintName="TABLE_A_PK" tableName="TABLE_A" columnNames="COLUMN_1" />
       </changeSet>

       <!-- Insert Some Rows into the Table A -->
       <changeSet author="ray.chen" id="3">
           <preConditions onFail="MARK_RAN">
               <sqlCheck expectedResult="0">SELECT COUNT(1) FROM TABLE_A</sqlCheck>
           </preConditions>
           <insert tableName="TABLE_A">
               <column name="COLUMN_1">00001</column>
               <column name="COLUMN_2">abc</column>
               <column name="COLUMN_3">123</column>
           </insert>
           <insert tableName="TABLE_A">
               <column name="COLUMN_1">00002</column>
               <column name="COLUMN_2">def</column>
               <column name="COLUMN_3">456</column>
           </insert>
           <insert tableName="TABLE_A">
               <column name="COLUMN_1">00003</column>
               <column name="COLUMN_2">ghi</column>
               <column name="COLUMN_3">789</column>
           </insert>
       </changeSet>
   </databaseChangeLog>
   ---------------------------------------------------------------------------------------------------------------------

3. Run the Liquibase Update Command
   Here is an example.
   ---------------------------------------------------------------------------------------------------------------------
   D:\liquibase-3.5.1-bin\liquibase.bat
       --classpath=D:\liquibase-3.5.1-bin\lib
       --changeLogFile=D:\liquibase\changelogs\changelog-for-quick-start.xml
       --driver=oracle.jdbc.OracleDriver
       --url=jdbc:oracle:thin:@localhost:1521:liquibase
       --username=RAYCHEN
       --password=a1b2c3d4
       --logLevel=info
       update
   ---------------------------------------------------------------------------------------------------------------------
   D:\liquibase-3.5.1-bin\liquibase.bat --classpath=D:\liquibase-3.5.1-bin\lib --changeLogFile=D:\liquibase\changelogs\changelog-for-quick-start.xml --driver=oracle.jdbc.OracleDriver --url=jdbc:oracle:thin:@localhost:1521:liquibase --username=RAYCHEN --password=a1b2c3d4 --logLevel=info update
   ---------------------------------------------------------------------------------------------------------------------

4. Check the Database Updated by Liquibase

========================================
Building Changelogs
========================================
Changelog File
    A changelog file is a text file containing database changes, it is the root of all changes.

    The corresponding configuration setting of changelog files is the <databaseChangeLog> tag.

    The <databaseChangeLog> Tag
        Attributes
            Name                    Description
            ----------------------------------------------------------------------------------------
            logicalFilePath         This attribute is used to override the actual file path when creating the unique identifiers of change sets.
                                    It is required when moving or renaming changelogs.

                                    Example:
                                        <databaseChangeLog ... logicalFilePath="changelog-main.xml">
                                            ...
                                        </databaseChangeLog>

        Sub-tags
            Name                    Description
            ----------------------------------------------------------------------------------------
            changeSet               This tag is used to define a change set.

                                    Example:
                                        <databaseChangeLog ...>
                                            <changeSet author="ray.chen" id="1">
                                                <createTable tableName="TABLE_A">
                                                    <column name="COLUMN_1" type="CHAR(5)">
                                                        <constraints nullable="false" />
                                                    </column>
                                                    <column name="COLUMN_2" type="VARCHAR2(255)" />
                                                    <column name="COLUMN_3" type="NUMBER(3)" />
                                                </createTable>
                                            </changeSet>
                                            ...
                                        </databaseChangeLog>

            include                 This tag is used to include a changelog file.

                                    Example:
                                        <databaseChangeLog ...>
                                            <include file="changelog-1.0.xml" relativeToChangelogFile="true" />
                                            ...
                                        </databaseChangeLog>

            preConditions           This tag is used to define some preonditions.

                                    Example:
                                        <databaseChangeLog ...>
                                            <preConditions>
                                                <dbms type="oracle" />
                                                <runningAs username="SYSTEM" />
                                            </preConditions>
                                            ...
                                        </databaseChangeLog>

            property                This tag is used to define a property.

                                    Example:
                                        <databaseChangeLog ...>
                                            <property name="TYPE_AS_NORMAL_TEXT" value="VARCHAR2(255)" dbms="oracle" />
                                            <property name="TYPE_AS_NORMAL_TEXT" value="VARCHAR(255)" dbms="postgresql" />
                                            <property name="TYPE_AS_NORMAL_TEXT" value="VARCHAR(255)" dbms="hsqldb" />
                                            ...
                                        </databaseChangeLog>

    Process
        When Liquibase runs, it parses the <databaseChangeLog> tag.
        It first checks the defined preconditions.
        If any of the preconditions fails, Liquibase exits with an error message;
        otherwise, Liquibase starts to run the <include> and <changeSet> tags in the order they appear.

    XML Schema
        The XML schema for the <databaseChangeLog> tag is available at http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd (if the version is 3.1).

    Unique Identifier of the Change Set
        ID of the Change Set +
        Author of the Change Set +
        Path of the Changelog File = Unique Identifier of the Change Set

    Sample Empty ChangeLog
        Note: Assuming the version is 3.1.

        XML
            --------------------------------------------------------------------------------------------------------------------------------
            <databaseChangeLog
                xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
                                    http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
            </databaseChangeLog>
            --------------------------------------------------------------------------------------------------------------------------------
            <databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
            </databaseChangeLog>
            --------------------------------------------------------------------------------------------------------------------------------

========================================
References
========================================
Liquibase
http://www.liquibase.org/

Liquibase - Wikipedia
https://en.wikipedia.org/wiki/Liquibase
